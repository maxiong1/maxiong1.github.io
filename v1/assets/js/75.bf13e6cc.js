(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{574:function(t,n,a){"use strict";a.r(n);var s=a(35),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import()")]),t._v(" "),a("p",[t._v("动态的加载模块。调用 import 的之处，被视为分割点，意思是，被请求的模块和它引用的所有子模块，会分割到一个单独的 chunk 中。")]),t._v(" "),a("h2",{attrs:{id:"import-中的表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-中的表达式"}},[t._v("#")]),t._v(" import() 中的表达式")]),t._v(" "),a("p",[t._v("不能使用完全动态的 "),a("code",[t._v("import")]),t._v(" 语句，例如 "),a("code",[t._v("import(foo)")]),t._v("。是因为 "),a("code",[t._v("foo")]),t._v(" 可能是系统或项目中任何文件的任何路径。")]),t._v(" "),a("p",[a("code",[t._v("import()")]),t._v(" 必须至少包含一些关于模块的路径信息。打包可以限定于一个特定的目录或文件集，以便于在使用动态表达式时 - 包括可能在 "),a("code",[t._v("import()")]),t._v(" 调用中请求的每个模块。例如， "),a("code",[t._v("import(")]),t._v("./locale/${language}.json"),a("code",[t._v(")")]),t._v(" 会把 "),a("code",[t._v(".locale")]),t._v(" 目录中的每个 "),a("code",[t._v(".json")]),t._v(" 文件打包到新的 "),a("code",[t._v("chunk")]),t._v(" 中。在运行时，计算完变量 "),a("code",[t._v("language")]),t._v(" 后，就可以使用像 "),a("code",[t._v("english.json")]),t._v(" 或 "),a("code",[t._v("german.json")]),t._v(" 的任何文件。")]),t._v(" "),a("h2",{attrs:{id:"magic-comments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#magic-comments"}},[t._v("#")]),t._v(" Magic Comments")]),t._v(" "),a("p",[t._v("内联注释使这一特性得以实现。通过在 import 中添加注释，我们可以进行诸如给 chunk 命名或选择不同模式的操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单个目标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "my-chunk-name" */')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackMode: "lazy" */')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackExports: ["default", "named"] */')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个可能的目标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackInclude: /\\.json$/ */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackExclude: /\\.noimport\\.json$/ */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "my-chunk-name" */')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackMode: "lazy" */')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPrefetch: true */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPreload: true */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("./locale/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpackIgnore：设置为 true 时，禁用动态导入解析。webpack也不会编译此行代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackIgnore: true */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignored-module.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("不能使用完全动态的 import 语句，否则会把目录下面所有文件都会打包成一个chunk文件")]),t._v(" "),a("p",[t._v("webpack分享大纲")]),t._v(" "),a("p",[t._v("一、简介\n1、概念\n2、特性\n- 代码分离\n- 模块热替换\n- Tree Shaking\n- 缓存\n二、配置\n1、入口\\输出\n2、单页面\\多页面配置\n三、模块\n1、何为 webpack 模块\n2、支持的模块类型\n3、模块的解析\n四、Loaders\n1、使用loader\n2、loader特性\n3、解析loader\n4、理解并手写loader\n5、常用loader\n五、插件\n1、使用插件\n2、理解并手写插件\n六、案例分析\n七、webpack与vite\n八、性能优化")])])}),[],!1,null,null,null);n.default=e.exports}}]);